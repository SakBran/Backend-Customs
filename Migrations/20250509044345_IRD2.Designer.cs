// <auto-generated />
using System;
using API.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250509044345_IRD2")]
    partial class IRD2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Model.TokenModel", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token");

                    b.ToTable("TokenModels");
                });

            modelBuilder.Entity("API.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackendCustoms.Model.CeiridFromIRD", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CEIRID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReceivedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SendDatetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ceiridFromIRDs");
                });

            modelBuilder.Entity("BackendCustoms.Model.CustomsData", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("AT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CEIRID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EditBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACCSCEIRID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceivedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SentDatetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("CustomsDatas");
                });

            modelBuilder.Entity("BackendCustoms.Model.SystemSetting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEIRID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RODate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RONo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("completeFolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceFolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toReadFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toReadFileNameStartWith")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("systemSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
